daemon off;
user www-data;
worker_processes 4;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        on;
    keepalive_timeout  65;
    server_tokens      off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $request_id';

        fastcgi_buffers 16 512k;
        fastcgi_buffer_size 512k;
        proxy_buffering off;
        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;
        map_hash_bucket_size 512;
        map_hash_max_size 45948;

        #logging
        access_log  /var/log/nginx/access.log   main;
        error_log   /var/log/nginx/error.log    warn;

    server {
    listen 80 default_server;
    listen [::]:80;

    server_name *.local.elmodev.com;
    root         /var/www/slack/public;
    underscores_in_headers on;

    location ~* "/(bundles|assets|css|js|img|images)/(.+)\.([0-9a-z]{6})\.(js|css|png|jpg|gif|svg)" {
        alias /var/www/slack/public/$1/$2.$4;
    }

    location /saml {
        root  /var/www/saml/www;
        # try to serve file directly, fallback to index.php
        try_files   $uri /index.php$is_args$args;
    }

    location /saml113 {
        root  /var/www/saml113/www;
        # try to serve file directly, fallback to index.php
	try_files   $uri /index.php$is_args$args;
    }

    location /saml114 {
        root  /var/www/saml114/www;
        # try to serve file directly, fallback to index.php
        try_files   $uri /index.php$is_args$args;
    }

    location /keepalive.js {
        break;
    }


    # have to break default nginx short-circut behaviour
    # and route liip_imagine back to Symfony application
    location ~ /media/cache/resolve {
        try_files $uri /index.php$is_args$args;
    }

    # the extension list is extracted from mimeTypes setting in PMS config.yml file
    # we need to default back to Symfony application
    # they might be the downloadable files in PMS application
    location ~* \.(png|jpg|jpge|gif|mpeg|wav|pdf|doc|docx|csv|xls|ppt|rft|txt) {
        try_files $uri /index.php$is_args$args;
    }

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {

        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }

            # Mitigate https://httpoxy.org/ vulnerabilities
            # block the header from being passed on to PHP-FPM, PHP-PM etc
            fastcgi_param HTTP_PROXY "";

            # get sent to the application server
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_NAME index.php;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_param HTTPS on;
            proxy_http_version 1.1;
            proxy_cookie_path / "/; HTTPOnly; Secure";
            proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Request-ID $request_id;        # Pass to app server
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Strict-Transport-Security "max-age=15552000; includeSubDomains; preload" always;
            add_header X-XSS-Protection "1; mode=block" always;
            proxy_cache_bypass $http_upgrade;
            access_log /var/log/nginx/access_trace.log; # Log $request_id
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            # Prevents URIs that include the front controller. This will 404:
            # http://domain.tld/index.php/some-path
            # Remove the internal directive to allow URIs like this
            internal;
        }


        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$ {
        return 404;
        }

        location ~ /\.ht {
            return 404;
        }

     }
}
